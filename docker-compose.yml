services:
  db:
    image: postgres:14-alpine
    container_name: final_form_postgres_db
    environment:
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: devpassword
      POSTGRES_DB: devdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # ports:
    #   - "5433:5432" # Expose PostgreSQL port to host for direct access if needed
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U devuser -d devdb"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: final_form_backend
    ports:
      - "127.0.0.1:54096:5000"
    volumes:
      - ./backend:/app/backend
      - ./instance:/app/instance
      - ./.env:/app/.env
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      DATABASE_URL: postgresql://devuser:devpassword@db:5432/devdb
      FLASK_ENV: development
      PORT: 5000
      HOST_PROJECT_PATH: /home/n56101903/ailiteracy
    # depends_on:
    #   db:
    #     condition: service_healthy
    command: ["gunicorn", "--workers", "1", "--reload", "--bind", "0.0.0.0:5000", "backend:create_app()"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: final_form_frontend
    ports:
      - "127.0.0.1:54095:80"
    # volumes:
    #   - ./frontend:/app
    #   - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://localhost:5000
    # depends_on:
    #   - backend

volumes:
  postgres_data:
